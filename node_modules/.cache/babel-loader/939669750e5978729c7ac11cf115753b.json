{"ast":null,"code":"var _jsxFileName = \"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/src/navigation/HeaderBar.js\";\nimport React, { Component } from 'react';\nimport classes from '../styling/App.module.css';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { selected, unselected } from '../styling/themes';\n\nclass HeaderBar extends Component {\n  constructor(_props) {\n    super(_props);\n    /***********************\n     * Set menu options here\n     ***********************/\n\n    this.menuItemsReturn = () => {\n      // return (\n      //     this.menuItems.map(item => (\n      //         <ThemeProvider\n      //             theme={() => {\n      //                 if (item.key === this.props.selectedItem) {\n      //                     return selected;\n      //                 }\n      //                 else {\n      //                     return unselected;\n      //                 }\n      //             }}\n      //             key={item.key}\n      //         >\n      //             {item}\n      //         </ThemeProvider>\n      //     ))\n      // );\n      // const menuItemSelected = styled.div`\n      //      display: inline-block;\n      //      color: white;\n      //      text-align: center;\n      //      padding-top: 0.4rem;\n      //      padding-bottom: 0.4rem;\n      //      width: ${100 / this.menuOptions.length}%;\n      //      font-weight: bold;\n      //      transition: 0.25s;\n      //      &:hover {\n      //          color: #C5FF0F;\n      //          cursor: pointer;\n      //      }\n      // `;\n      // const menuItemUnselected = styled.div`\n      //     display: inline-block;\n      //     color: #90D60D;\n      //     text-align: center;\n      //     padding-top: 0.4rem;\n      //     padding-bottom: 0.4rem;\n      //     width: ${100 / this.menuOptions.length}%;\n      //     font-weight: bold;\n      //     transition: 0.25s;\n      //     &:hover {\n      //         color: #A3F20F;\n      //         cursor: pointer;\n      //     }\n      // `;\n      const MenuItem = styled.div`\n            display: inline-block;\n            color: ${props => props.theme.col};\n            text-align: center;\n            padding-top: 0.4rem;\n            padding-bottom: 0.4rem;\n            width: ${100 / this.menuOptions.length}%;\n            font-weight: bold;\n            transition: 0.25s;\n            &:hover {\n                color: ${props => props.theme.hoverCol};\n                cursor: pointer;\n            }\n        `;\n      return this.menuOptions.map(option => {\n        return /*#__PURE__*/React.createElement(ThemeProvider, {\n          theme: () => {\n            if (option === this.props.selectedItem) {\n              return selected;\n            } else {\n              return unselected;\n            }\n          },\n          key: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          onClick: () => this.props.buttonClicked(option),\n          key: option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }\n        }, option));\n      });\n    };\n\n    this.menuOptions = ['Home', 'Portfolio', 'Contact']; // Menu item styling\n    // this.menuItem = styled.div`\n    //     display: inline-block;\n    //     color: ${props => props.theme.col};\n    //     text-align: center;\n    //     padding-top: 0.4rem;\n    //     padding-bottom: 0.4rem;\n    //     width: ${100 / this.menuOptions.length}%;\n    //     font-weight: bold;\n    //     transition: 0.25s;\n    //     &:hover {\n    //         color: ${props => props.theme.hoverCol};\n    //         cursor: pointer;\n    //     }\n    // `;\n    // this.menuItemSelected = styled.div`\n    //      display: inline-block;\n    //      color: white;\n    //      text-align: center;\n    //      padding-top: 0.4rem;\n    //      padding-bottom: 0.4rem;\n    //      width: ${100 / this.menuOptions.length}%;\n    //      font-weight: bold;\n    //      transition: 0.25s;\n    //      &:hover {\n    //          color: #C5FF0F;\n    //          cursor: pointer;\n    //      }\n    // `;\n    // this.menuItemUnselected = styled.div`\n    //     display: inline-block;\n    //     color: #90D60D;\n    //     text-align: center;\n    //     padding-top: 0.4rem;\n    //     padding-bottom: 0.4rem;\n    //     width: ${100 / this.menuOptions.length}%;\n    //     font-weight: bold;\n    //     transition: 0.25s;\n    //     &:hover {\n    //         color: #A3F20F;\n    //         cursor: pointer;\n    //     }\n    // `;\n    // this.selected = {\n    //     col: 'white',\n    //     hoverCol: '#C5FF0F'\n    // }\n    // this.unselected = {\n    //     col: '#90D60D',\n    //     hoverCol: '#A3F20F'\n    // }\n    // // Set up div elements for each \n    // this.menuItems = this.menuOptions.map(tab => (\n    //     <this.menuItem \n    //         onClick={() => this.props.buttonClicked(tab)}\n    //         key={tab}\n    //     >\n    //         {tab}\n    //     </this.menuItem>\n    // ));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `${classes.App} ${classes.MenuBar}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, this.menuItemsReturn());\n  }\n\n}\n\nexport default HeaderBar;","map":{"version":3,"sources":["/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/src/navigation/HeaderBar.js"],"names":["React","Component","classes","styled","ThemeProvider","selected","unselected","HeaderBar","constructor","props","menuItemsReturn","MenuItem","div","theme","col","menuOptions","length","hoverCol","map","option","selectedItem","buttonClicked","render","App","MenuBar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,mBAArC;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC9BO,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;AAEA;;;;AAHe,SA0EnBC,eA1EmB,GA0ED,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,YAAMC,QAAQ,GAAGR,MAAM,CAACS,GAAI;;qBAEfH,KAAK,IAAIA,KAAK,CAACI,KAAN,CAAYC,GAAI;;;;qBAIzB,MAAM,KAAKC,WAAL,CAAiBC,MAAO;;;;yBAI1BP,KAAK,IAAIA,KAAK,CAACI,KAAN,CAAYI,QAAS;;;SAV/C;AAeA,aAAO,KAAKF,WAAL,CAAiBG,GAAjB,CAAqBC,MAAM,IAAI;AAClC,4BACI,oBAAC,aAAD;AACI,UAAA,KAAK,EAAE,MAAM;AACT,gBAAIA,MAAM,KAAK,KAAKV,KAAL,CAAWW,YAA1B,EAAwC;AACpC,qBAAOf,QAAP;AACH,aAFD,MAGK;AACD,qBAAOC,UAAP;AACH;AACJ,WARL;AASI,UAAA,GAAG,EAAEa,MATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAWI,oBAAC,QAAD;AACI,UAAA,OAAO,EAAE,MAAM,KAAKV,KAAL,CAAWY,aAAX,CAAyBF,MAAzB,CADnB;AAEI,UAAA,GAAG,EAAEA,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIKA,MAJL,CAXJ,CADJ;AAoBH,OArBM,CAAP;AAsBH,KA/JkB;;AAMf,SAAKJ,WAAL,GAAmB,CAAC,MAAD,EAAS,WAAT,EAAsB,SAAtB,CAAnB,CANe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAyFDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,GAAEpB,OAAO,CAACqB,GAAI,IAAGrB,OAAO,CAACsB,OAAQ,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,eAAL,EADL,CADJ;AAKH;;AAxK6B;;AA2KlC,eAAeH,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../styling/App.module.css';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { selected, unselected } from '../styling/themes';\n\nclass HeaderBar extends Component {\n    constructor(props) {\n        super(props);\n\n        /***********************\n         * Set menu options here\n         ***********************/ \n        this.menuOptions = ['Home', 'Portfolio', 'Contact'];\n\n        // Menu item styling\n        // this.menuItem = styled.div`\n        //     display: inline-block;\n        //     color: ${props => props.theme.col};\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: ${props => props.theme.hoverCol};\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        // this.menuItemSelected = styled.div`\n        //      display: inline-block;\n        //      color: white;\n        //      text-align: center;\n        //      padding-top: 0.4rem;\n        //      padding-bottom: 0.4rem;\n        //      width: ${100 / this.menuOptions.length}%;\n        //      font-weight: bold;\n        //      transition: 0.25s;\n        //      &:hover {\n        //          color: #C5FF0F;\n        //          cursor: pointer;\n        //      }\n        // `;\n\n        // this.menuItemUnselected = styled.div`\n        //     display: inline-block;\n        //     color: #90D60D;\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: #A3F20F;\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        // this.selected = {\n        //     col: 'white',\n        //     hoverCol: '#C5FF0F'\n        // }\n        // this.unselected = {\n        //     col: '#90D60D',\n        //     hoverCol: '#A3F20F'\n        // }\n\n        // // Set up div elements for each \n        // this.menuItems = this.menuOptions.map(tab => (\n        //     <this.menuItem \n        //         onClick={() => this.props.buttonClicked(tab)}\n        //         key={tab}\n        //     >\n        //         {tab}\n        //     </this.menuItem>\n        // ));\n    }\n\n    menuItemsReturn = () => {\n        // return (\n        //     this.menuItems.map(item => (\n        //         <ThemeProvider\n        //             theme={() => {\n        //                 if (item.key === this.props.selectedItem) {\n        //                     return selected;\n        //                 }\n        //                 else {\n        //                     return unselected;\n        //                 }\n        //             }}\n        //             key={item.key}\n        //         >\n        //             {item}\n        //         </ThemeProvider>\n        //     ))\n        // );\n        // const menuItemSelected = styled.div`\n        //      display: inline-block;\n        //      color: white;\n        //      text-align: center;\n        //      padding-top: 0.4rem;\n        //      padding-bottom: 0.4rem;\n        //      width: ${100 / this.menuOptions.length}%;\n        //      font-weight: bold;\n        //      transition: 0.25s;\n        //      &:hover {\n        //          color: #C5FF0F;\n        //          cursor: pointer;\n        //      }\n        // `;\n\n        // const menuItemUnselected = styled.div`\n        //     display: inline-block;\n        //     color: #90D60D;\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: #A3F20F;\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        const MenuItem = styled.div`\n            display: inline-block;\n            color: ${props => props.theme.col};\n            text-align: center;\n            padding-top: 0.4rem;\n            padding-bottom: 0.4rem;\n            width: ${100 / this.menuOptions.length}%;\n            font-weight: bold;\n            transition: 0.25s;\n            &:hover {\n                color: ${props => props.theme.hoverCol};\n                cursor: pointer;\n            }\n        `;\n\n        return this.menuOptions.map(option => {\n            return (\n                <ThemeProvider \n                    theme={() => {\n                        if (option === this.props.selectedItem) {\n                            return selected;\n                        }\n                        else {\n                            return unselected;\n                        }\n                    }}\n                    key={option}\n                >\n                    <MenuItem\n                        onClick={() => this.props.buttonClicked(option)}\n                        key={option}\n                    >\n                        {option}\n                    </MenuItem>\n                </ThemeProvider>\n            );\n        });\n    };\n\n    render() {\n        return(\n            <div className={`${classes.App} ${classes.MenuBar}`}>\n                {this.menuItemsReturn()}\n            </div>\n        );\n    }\n}\n\nexport default HeaderBar;"]},"metadata":{},"sourceType":"module"}