{"ast":null,"code":"import _readOnlyError from\"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import _classCallCheck from\"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classes from'../styling/App.module.css';import styled,{ThemeProvider}from'styled-components';import{selected,unselected}from'../styling/themes';var HeaderBar=/*#__PURE__*/function(_Component){_inherits(HeaderBar,_Component);var _super=_createSuper(HeaderBar);function HeaderBar(props){var _this;_classCallCheck(this,HeaderBar);_this=_super.call(this,props);/***********************\n         * Set menu options here\n         ***********************/_this.menuItemsReturn=function(){// return (\n//     this.menuItems.map(item => (\n//         <ThemeProvider\n//             theme={() => {\n//                 if (item.key === this.props.selectedItem) {\n//                     return selected;\n//                 }\n//                 else {\n//                     return unselected;\n//                 }\n//             }}\n//             key={item.key}\n//         >\n//             {item}\n//         </ThemeProvider>\n//     ))\n// );\n// const menuItemSelected = styled.div`\n//      display: inline-block;\n//      color: white;\n//      text-align: center;\n//      padding-top: 0.4rem;\n//      padding-bottom: 0.4rem;\n//      width: ${100 / this.menuOptions.length}%;\n//      font-weight: bold;\n//      transition: 0.25s;\n//      &:hover {\n//          color: #C5FF0F;\n//          cursor: pointer;\n//      }\n// `;\n// const menuItemUnselected = styled.div`\n//     display: inline-block;\n//     color: #90D60D;\n//     text-align: center;\n//     padding-top: 0.4rem;\n//     padding-bottom: 0.4rem;\n//     width: ${100 / this.menuOptions.length}%;\n//     font-weight: bold;\n//     transition: 0.25s;\n//     &:hover {\n//         color: #A3F20F;\n//         cursor: pointer;\n//     }\n// `;\n// const menuItem = styled.div`\n//     display: inline-block;\n//     color: ${props => props.theme.col};\n//     text-align: center;\n//     padding-top: 0.4rem;\n//     padding-bottom: 0.4rem;\n//     width: ${100 / this.menuOptions.length}%;\n//     font-weight: bold;\n//     transition: 0.25s;\n//     &:hover {\n//         color: ${props => props.theme.hoverCol};\n//         cursor: pointer;\n//     }\n// `;\nreturn _this.menuOptions.map(function(option){// return (\n//     <ThemeProvider theme={() => {\n//         if (option === this.props.selectedItem) {\n//             return selected;\n//         }\n//         else {\n//             return unselected;\n//         }\n//     }}>\n//         <menuItem\n//             onClick={() => this.props.buttonClicked(option)}\n//             key={option}\n//         >\n//             {option}\n//         </menuItem>\n//     </ThemeProvider>\n// );\nvar _currentTheme=function currentTheme(){if(option===_this.props.selectedItem){_currentTheme=(_readOnlyError(\"currentTheme\"),selected);}else{_currentTheme=(_readOnlyError(\"currentTheme\"),unselected);}};console.log('main col: '+_currentTheme.col);console.log('hover col: '+_currentTheme.hoverCol);return/*#__PURE__*/React.createElement(\"div\",{style:{'display':'inlineBlock','color':_currentTheme.col,'textAlign':'center','paddingTop':'0.4rem','paddingBottom':'0.4rem','width':toString(100/_this.menuOptions.length),'fontWeight':'bold','transition':'0.25s','&:hover':{'color':_currentTheme.hoverCol,'cursor':'pointer'}},onClick:function onClick(){return _this.props.buttonClicked(option);},key:option},option);// if (option === this.props.selectedItem) {\n//     return (\n//         <menuItemSelected>This is a menu item</menuItemSelected>\n//         // <this.menuItemSelected\n//         //     onClick={() => this.props.buttonClicked(option)}\n//         //     key={option}\n//         // >\n//         //     {option}\n//         // </this.menuItemSelected>\n//     );\n// }\n// else {\n//     return (\n//         <p>This is a paragraph</p>\n//         // <this.menuItemUnselected\n//         //     onClick={() => this.props.buttonClicked(option)}\n//         //     key={option}\n//         // >\n//         //     {option}\n//         // </this.menuItemUnselected>\n//     );\n// }\n// if (option === this.props.selectedItem) {\n//     return (\n//         <div\n//             style={{\n//             }}\n//             onClick={() => this.props.buttonClicked(option)}\n//             key={option}\n//         >\n//             {option}\n//         </div>\n//     );\n// }\n// else {\n//     return (\n//         <div\n//             onClick={() => this.props.buttonClicked(option)}\n//             key={option}\n//         >\n//             {option}\n//         </div>\n//     );\n// }\n});};_this.menuOptions=['Home','Portfolio','Contact'];// Menu item styling\n// this.menuItem = styled.div`\n//     display: inline-block;\n//     color: ${props => props.theme.col};\n//     text-align: center;\n//     padding-top: 0.4rem;\n//     padding-bottom: 0.4rem;\n//     width: ${100 / this.menuOptions.length}%;\n//     font-weight: bold;\n//     transition: 0.25s;\n//     &:hover {\n//         color: ${props => props.theme.hoverCol};\n//         cursor: pointer;\n//     }\n// `;\n// this.menuItemSelected = styled.div`\n//      display: inline-block;\n//      color: white;\n//      text-align: center;\n//      padding-top: 0.4rem;\n//      padding-bottom: 0.4rem;\n//      width: ${100 / this.menuOptions.length}%;\n//      font-weight: bold;\n//      transition: 0.25s;\n//      &:hover {\n//          color: #C5FF0F;\n//          cursor: pointer;\n//      }\n// `;\n// this.menuItemUnselected = styled.div`\n//     display: inline-block;\n//     color: #90D60D;\n//     text-align: center;\n//     padding-top: 0.4rem;\n//     padding-bottom: 0.4rem;\n//     width: ${100 / this.menuOptions.length}%;\n//     font-weight: bold;\n//     transition: 0.25s;\n//     &:hover {\n//         color: #A3F20F;\n//         cursor: pointer;\n//     }\n// `;\n// this.selected = {\n//     col: 'white',\n//     hoverCol: '#C5FF0F'\n// }\n// this.unselected = {\n//     col: '#90D60D',\n//     hoverCol: '#A3F20F'\n// }\n// // Set up div elements for each \n// this.menuItems = this.menuOptions.map(tab => (\n//     <this.menuItem \n//         onClick={() => this.props.buttonClicked(tab)}\n//         key={tab}\n//     >\n//         {tab}\n//     </this.menuItem>\n// ));\nreturn _this;}_createClass(HeaderBar,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.App,\" \").concat(classes.MenuBar)},this.menuItemsReturn());}}]);return HeaderBar;}(Component);export default HeaderBar;","map":{"version":3,"sources":["/Users/RossDuncan3/Dropbox/Step 9 Productions (non-graphics)/New React website/step9productions-react-express/src/navigation/HeaderBar.js"],"names":["React","Component","classes","styled","ThemeProvider","selected","unselected","HeaderBar","props","menuItemsReturn","menuOptions","map","option","currentTheme","selectedItem","console","log","col","hoverCol","toString","length","buttonClicked","App","MenuBar"],"mappings":"omCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,MAAP,EAAiBC,aAAjB,KAAsC,mBAAtC,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,mBAArC,C,GAEMC,CAAAA,S,sGACF,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EAEA;;iCAHe,MA0EnBC,eA1EmB,CA0ED,UAAM,CACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,OAAKC,WAAL,CAAiBC,GAAjB,CAAqB,SAAAC,MAAM,CAAI,CAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,aAAY,CAAG,uBAAM,CACvB,GAAID,MAAM,GAAK,MAAKJ,KAAL,CAAWM,YAA1B,CAAwC,CACpCD,aAAY,iCAAGR,QAAH,CAAZ,CACH,CAFD,IAGK,CACDQ,aAAY,iCAAGP,UAAH,CAAZ,CACH,CACJ,CAPD,CASAS,OAAO,CAACC,GAAR,CAAY,aAAeH,aAAY,CAACI,GAAxC,EACAF,OAAO,CAACC,GAAR,CAAY,cAAgBH,aAAY,CAACK,QAAzC,EAEA,mBACI,2BACI,KAAK,CAAE,CACH,UAAW,aADR,CAEH,QAASL,aAAY,CAACI,GAFnB,CAGH,YAAa,QAHV,CAIH,aAAc,QAJX,CAKH,gBAAiB,QALd,CAMH,QAASE,QAAQ,CAAC,IAAM,MAAKT,WAAL,CAAiBU,MAAxB,CANd,CAOH,aAAc,MAPX,CAQH,aAAc,OARX,CASH,UAAW,CACP,QAASP,aAAY,CAACK,QADf,CAEP,SAAU,SAFH,CATR,CADX,CAeI,OAAO,CAAE,yBAAM,OAAKV,KAAL,CAAWa,aAAX,CAAyBT,MAAzB,CAAN,EAfb,CAgBI,GAAG,CAAEA,MAhBT,EAkBKA,MAlBL,CADJ,CAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CApGM,CAAP,CAqGH,CA9OkB,CAMf,MAAKF,WAAL,CAAmB,CAAC,MAAD,CAAS,WAAT,CAAsB,SAAtB,CAAnB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEe,aAwElB,C,6DAwKQ,CACL,mBACI,2BAAK,SAAS,WAAKR,OAAO,CAACoB,GAAb,aAAoBpB,OAAO,CAACqB,OAA5B,CAAd,EACK,KAAKd,eAAL,EADL,CADJ,CAKH,C,uBAvPmBR,S,EA0PxB,cAAeM,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport classes from '../styling/App.module.css';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { selected, unselected } from '../styling/themes';\n\nclass HeaderBar extends Component {\n    constructor(props) {\n        super(props);\n\n        /***********************\n         * Set menu options here\n         ***********************/ \n        this.menuOptions = ['Home', 'Portfolio', 'Contact'];\n\n        // Menu item styling\n        // this.menuItem = styled.div`\n        //     display: inline-block;\n        //     color: ${props => props.theme.col};\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: ${props => props.theme.hoverCol};\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        // this.menuItemSelected = styled.div`\n        //      display: inline-block;\n        //      color: white;\n        //      text-align: center;\n        //      padding-top: 0.4rem;\n        //      padding-bottom: 0.4rem;\n        //      width: ${100 / this.menuOptions.length}%;\n        //      font-weight: bold;\n        //      transition: 0.25s;\n        //      &:hover {\n        //          color: #C5FF0F;\n        //          cursor: pointer;\n        //      }\n        // `;\n\n        // this.menuItemUnselected = styled.div`\n        //     display: inline-block;\n        //     color: #90D60D;\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: #A3F20F;\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        // this.selected = {\n        //     col: 'white',\n        //     hoverCol: '#C5FF0F'\n        // }\n        // this.unselected = {\n        //     col: '#90D60D',\n        //     hoverCol: '#A3F20F'\n        // }\n\n        // // Set up div elements for each \n        // this.menuItems = this.menuOptions.map(tab => (\n        //     <this.menuItem \n        //         onClick={() => this.props.buttonClicked(tab)}\n        //         key={tab}\n        //     >\n        //         {tab}\n        //     </this.menuItem>\n        // ));\n    }\n\n    menuItemsReturn = () => {\n        // return (\n        //     this.menuItems.map(item => (\n        //         <ThemeProvider\n        //             theme={() => {\n        //                 if (item.key === this.props.selectedItem) {\n        //                     return selected;\n        //                 }\n        //                 else {\n        //                     return unselected;\n        //                 }\n        //             }}\n        //             key={item.key}\n        //         >\n        //             {item}\n        //         </ThemeProvider>\n        //     ))\n        // );\n        // const menuItemSelected = styled.div`\n        //      display: inline-block;\n        //      color: white;\n        //      text-align: center;\n        //      padding-top: 0.4rem;\n        //      padding-bottom: 0.4rem;\n        //      width: ${100 / this.menuOptions.length}%;\n        //      font-weight: bold;\n        //      transition: 0.25s;\n        //      &:hover {\n        //          color: #C5FF0F;\n        //          cursor: pointer;\n        //      }\n        // `;\n\n        // const menuItemUnselected = styled.div`\n        //     display: inline-block;\n        //     color: #90D60D;\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: #A3F20F;\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        // const menuItem = styled.div`\n        //     display: inline-block;\n        //     color: ${props => props.theme.col};\n        //     text-align: center;\n        //     padding-top: 0.4rem;\n        //     padding-bottom: 0.4rem;\n        //     width: ${100 / this.menuOptions.length}%;\n        //     font-weight: bold;\n        //     transition: 0.25s;\n        //     &:hover {\n        //         color: ${props => props.theme.hoverCol};\n        //         cursor: pointer;\n        //     }\n        // `;\n\n        return this.menuOptions.map(option => {\n            // return (\n            //     <ThemeProvider theme={() => {\n            //         if (option === this.props.selectedItem) {\n            //             return selected;\n            //         }\n            //         else {\n            //             return unselected;\n            //         }\n            //     }}>\n            //         <menuItem\n            //             onClick={() => this.props.buttonClicked(option)}\n            //             key={option}\n            //         >\n            //             {option}\n            //         </menuItem>\n            //     </ThemeProvider>\n            // );\n\n            const currentTheme = () => {\n                if (option === this.props.selectedItem) {\n                    currentTheme = selected;\n                }\n                else {\n                    currentTheme = unselected;\n                }\n            };\n\n            console.log('main col: ' + currentTheme.col);\n            console.log('hover col: ' + currentTheme.hoverCol);\n\n            return (\n                <div\n                    style={{\n                        'display': 'inlineBlock',\n                        'color': currentTheme.col,\n                        'textAlign': 'center',\n                        'paddingTop': '0.4rem',\n                        'paddingBottom': '0.4rem',\n                        'width': toString(100 / this.menuOptions.length),\n                        'fontWeight': 'bold',\n                        'transition': '0.25s',\n                        '&:hover': {\n                            'color': currentTheme.hoverCol,\n                            'cursor': 'pointer'\n                        }\n                    }}\n                    onClick={() => this.props.buttonClicked(option)}\n                    key={option}\n                >\n                    {option}\n                </div>\n            );\n\n            // if (option === this.props.selectedItem) {\n            //     return (\n            //         <menuItemSelected>This is a menu item</menuItemSelected>\n            //         // <this.menuItemSelected\n            //         //     onClick={() => this.props.buttonClicked(option)}\n            //         //     key={option}\n            //         // >\n            //         //     {option}\n            //         // </this.menuItemSelected>\n            //     );\n            // }\n            // else {\n            //     return (\n            //         <p>This is a paragraph</p>\n            //         // <this.menuItemUnselected\n            //         //     onClick={() => this.props.buttonClicked(option)}\n            //         //     key={option}\n            //         // >\n            //         //     {option}\n            //         // </this.menuItemUnselected>\n            //     );\n            // }\n\n            // if (option === this.props.selectedItem) {\n            //     return (\n            //         <div\n            //             style={{\n\n            //             }}\n            //             onClick={() => this.props.buttonClicked(option)}\n            //             key={option}\n            //         >\n            //             {option}\n            //         </div>\n            //     );\n            // }\n            // else {\n            //     return (\n            //         <div\n            //             onClick={() => this.props.buttonClicked(option)}\n            //             key={option}\n            //         >\n            //             {option}\n            //         </div>\n            //     );\n            // }\n        });\n    };\n\n    render() {\n        return(\n            <div className={`${classes.App} ${classes.MenuBar}`}>\n                {this.menuItemsReturn()}\n            </div>\n        );\n    }\n}\n\nexport default HeaderBar;"]},"metadata":{},"sourceType":"module"}